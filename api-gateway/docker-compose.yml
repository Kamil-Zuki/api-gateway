version: '3.8'
services:
  api-gateway:
    container_name: api-gateway
    build:
      context: .\api-gateway\api-gateway
      dockerfile: Dockerfile
    volumes:
      - ./ocelot.json:/app/ocelot.json
    depends_on:
      - dictionary-parser
      - authorization-module
    ports:
      - "8050:80"
    networks:
      - backend

  dictionary-parser:
    container_name: dictionary-parser
    build:
      context: .\dictionary-parser\dictionary-parser
      dockerfile: Dockerfile
    networks:
      - backend

  authorization-module:
    container_name: authorization-module
    build:
      context: .\authorization-module\authorization-module.API
      dockerfile: Dockerfile
    networks:
      - backend
    depends_on:
      - rabbitmq
    environment:
        DB_CONNECTION_STRING: "Server=host.docker.internal;Port=5432;Database=glosslore; User Id=postgres;Password=kamkam14"

  personal-vocab:
    container_name: personal-vocab
    build:
        context: .\personal-vocab
        dockerfile: Dockerfile
    networks:
     - backend
    depends_on:
     - rabbitmq
    environment:
        DB_CONNECTION_STRING: "Server=host.docker.internal;Port=5432;Database=personal-vocab; User Id=postgres;Password=kamkam14"
   
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    ports:
    - "5672:5672"
    - "15672:15672"
    networks:
    - backend
    environment:
        RABBITMQ_DEFAULT_USER: "guest"
        RABBITMQ_DEFAULT_PASS: "1234"

networks:
  backend: